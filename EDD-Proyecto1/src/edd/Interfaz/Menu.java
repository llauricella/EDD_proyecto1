/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edd.Interfaz;
import java.awt.BorderLayout;
import java.awt.Component;
import javax.swing.*;
import org.graphstream.graph.*;
import org.graphstream.graph.implementations.*;
import org.graphstream.ui.view.*;
import org.graphstream.ui.swing_viewer.SwingViewer;
/**
 * @version 23/10/2024
 * @author Luigi Lauricella
 */
public class Menu extends JFrame implements ViewerListener {
    private Graph graph;
    private boolean loop = true;

    public Menu() {
        initComponents();
        initGraph(); // Inicializa el grafo
        run(); // Inicia el visualizador
    }

    // Método para inicializar el grafo
    private void initGraph() {
        graph = new SingleGraph("Tutorial 1");

        graph.addNode("A");
        graph.addNode("B");
        graph.addNode("C");
        graph.addEdge("AB", "A", "B");
        graph.addEdge("BC", "B", "C");
        graph.addEdge("CA", "C", "A");

        // Añadir etiquetas para mejor visibilidad
        for (Node node : graph) {
            node.setAttribute("ui.label", node.getId());
        }

        // Estilo predeterminado para los nodos
        graph.setAttribute("ui.stylesheet", "node { fill-color: grey; }");
    }

    // Método para iniciar el bucle del visualizador
    private void run() {
        // Crear un visualizador para el grafo
        var viewer = new SwingViewer(graph, Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD);
        viewer.enableAutoLayout();

        // Añadir el panel del visualizador a jPanel1
        View view = viewer.addDefaultView(false); // Sin vista por defecto
        GraphStreamPanel.setLayout(new BorderLayout());
        GraphStreamPanel.add((Component)view, BorderLayout.CENTER); // Añadir view al jPanel1

        setVisible(true); // Hacer visible el JFrame
    }

    @Override
    public void viewClosed(String id) {
        loop = false;
    }

    @Override
    public void buttonPushed(String id) {}

    @Override
    public void buttonReleased(String id) {}
    
    @Override
    public void mouseOver(String id) {}

    @Override
    public void mouseLeft(String id) {}

    // Método para alternar el color del nodo clicado entre gris y rojo
    private void toggleNodeColor(String nodeId) {
        Node node = graph.getNode(nodeId);
        if (node != null) {
            String currentStyle = String.valueOf(node.getAttribute("ui.style"));
            if (currentStyle.contains("red")) {
                node.setAttribute("ui.style", "fill-color: grey;");
                System.out.println("Node " + nodeId + " color changed to grey.");
            } else {
                node.setAttribute("ui.style", "fill-color: red;");
                System.out.println("Node " + nodeId + " color changed to red.");
            }
        } else {
            System.out.println("Node " + nodeId + " does not exist.");
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GraphStreamPanel = new javax.swing.JPanel();
        SucursalField = new javax.swing.JTextField();
        SucursalButton = new javax.swing.JButton();
        SucursalLabel = new javax.swing.JLabel();
        tLabel = new javax.swing.JLabel();
        tField = new javax.swing.JTextField();
        tBotton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout GraphStreamPanelLayout = new javax.swing.GroupLayout(GraphStreamPanel);
        GraphStreamPanel.setLayout(GraphStreamPanelLayout);
        GraphStreamPanelLayout.setHorizontalGroup(
            GraphStreamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        GraphStreamPanelLayout.setVerticalGroup(
            GraphStreamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );

        SucursalButton.setText("Insertar");
        SucursalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SucursalButtonActionPerformed(evt);
            }
        });

        SucursalLabel.setText("Colocar o retirar sucursales por su nombre");

        tLabel.setText("Establecer T");

        tBotton.setText("Establecer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(GraphStreamPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(139, 139, 139))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SucursalLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SucursalField, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(SucursalButton)))
                .addGap(102, 102, 102)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(tBotton))
                    .addComponent(tLabel))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(GraphStreamPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SucursalLabel)
                    .addComponent(tLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SucursalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SucursalButton)
                    .addComponent(tField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tBotton))
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SucursalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SucursalButtonActionPerformed
        // getText del Field para sacar el nombre de la sucursal
        String SucursalName = SucursalField.getText();
    }//GEN-LAST:event_SucursalButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Menu().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel GraphStreamPanel;
    private javax.swing.JButton SucursalButton;
    private javax.swing.JTextField SucursalField;
    private javax.swing.JLabel SucursalLabel;
    private javax.swing.JButton tBotton;
    private javax.swing.JTextField tField;
    private javax.swing.JLabel tLabel;
    // End of variables declaration//GEN-END:variables


}
