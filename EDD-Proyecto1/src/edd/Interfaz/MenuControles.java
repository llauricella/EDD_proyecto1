/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edd.Interfaz;

import EstructurasDeDatos.Busquedas;
import EstructurasDeDatos.Grafo;
import EstructurasDeDatos.Lista;
import EstructurasDeDatos.Nodo;
import EstructurasDeDatos.LecturaJson;
import EstructurasDeDatos.Parada;
import org.graphstream.graph.*;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author Luigi Lauricella
 */

public class MenuControles extends javax.swing.JFrame {

    public GraphStream graphstream;
    public Grafo grafo;
    public Lista lista;

    /**
     * Creates new form MenuControles
     */
    public MenuControles() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JSONButton = new javax.swing.JButton();
        tButton = new javax.swing.JButton();
        tField = new javax.swing.JTextField();
        tLabel = new javax.swing.JLabel();
        MenuLabel = new javax.swing.JLabel();
        SucursalField = new javax.swing.JTextField();
        SucursalLabel = new javax.swing.JLabel();
        SucursalButton = new javax.swing.JButton();
        CoberturaLabel = new javax.swing.JLabel();
        DFSButton = new javax.swing.JButton();
        BFSButton = new javax.swing.JButton();
        CoberturaField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ResultadosBusquedaArea = new javax.swing.JTextArea();
        ResultadosBusquedaLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CoberturaArea = new javax.swing.JTextArea();
        CoverturaLabel = new javax.swing.JLabel();
        JSONButton1 = new javax.swing.JButton();
        agregarLineaParadas = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menú de Controles");
        setBackground(new java.awt.Color(255, 153, 153));
        setForeground(java.awt.Color.darkGray);
        setResizable(false);

        JSONButton.setBackground(new java.awt.Color(255, 204, 204));
        JSONButton.setFont(new java.awt.Font("Swis721 Blk BT", 0, 14)); // NOI18N
        JSONButton.setForeground(new java.awt.Color(255, 255, 255));
        JSONButton.setText("  Cargar Json  ");
        JSONButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        JSONButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JSONButtonActionPerformed(evt);
            }
        });

        tButton.setBackground(new java.awt.Color(0, 153, 153));
        tButton.setFont(new java.awt.Font("Swis721 Blk BT", 0, 12)); // NOI18N
        tButton.setForeground(new java.awt.Color(255, 255, 255));
        tButton.setText("Cambiar");
        tButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tButtonActionPerformed(evt);
            }
        });

        tField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tFieldActionPerformed(evt);
            }
        });

        tLabel.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        tLabel.setText("  Establecer T  ");

        MenuLabel.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        MenuLabel.setForeground(new java.awt.Color(0, 153, 153));
        MenuLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MenuLabel.setText("  Menú de Control  ");
        MenuLabel.setToolTipText("");
        MenuLabel.setBorder(new javax.swing.border.MatteBorder(null));

        SucursalField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SucursalFieldActionPerformed(evt);
            }
        });

        SucursalLabel.setFont(new java.awt.Font("Segoe UI Semilight", 2, 12)); // NOI18N
        SucursalLabel.setText("Colocar o eliminar sucursal por nombre");

        SucursalButton.setBackground(new java.awt.Color(0, 153, 153));
        SucursalButton.setFont(new java.awt.Font("Swis721 Blk BT", 0, 12)); // NOI18N
        SucursalButton.setForeground(new java.awt.Color(255, 255, 255));
        SucursalButton.setText("Cambiar");
        SucursalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SucursalButtonActionPerformed(evt);
            }
        });

        CoberturaLabel.setFont(new java.awt.Font("Segoe UI Semilight", 2, 12)); // NOI18N
        CoberturaLabel.setText("Seleccionar sucursal para búsqueda");

        DFSButton.setBackground(new java.awt.Color(0, 153, 153));
        DFSButton.setFont(new java.awt.Font("Swis721 Blk BT", 0, 12)); // NOI18N
        DFSButton.setForeground(new java.awt.Color(255, 255, 255));
        DFSButton.setText("DFS");
        DFSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DFSButtonActionPerformed(evt);
            }
        });

        BFSButton.setBackground(new java.awt.Color(0, 153, 153));
        BFSButton.setFont(new java.awt.Font("Swis721 Blk BT", 0, 12)); // NOI18N
        BFSButton.setForeground(new java.awt.Color(255, 255, 255));
        BFSButton.setText("BFS");
        BFSButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BFSButtonActionPerformed(evt);
            }
        });

        ResultadosBusquedaArea.setColumns(20);
        ResultadosBusquedaArea.setRows(5);
        jScrollPane1.setViewportView(ResultadosBusquedaArea);

        ResultadosBusquedaLabel.setText("Resultados de la búsqueda ");

        CoberturaArea.setColumns(20);
        CoberturaArea.setRows(5);
        jScrollPane2.setViewportView(CoberturaArea);

        CoverturaLabel.setText("Sucursales recomendadas para obtener la cobertura total");

        JSONButton1.setBackground(new java.awt.Color(255, 204, 204));
        JSONButton1.setFont(new java.awt.Font("Swis721 Blk BT", 0, 14)); // NOI18N
        JSONButton1.setForeground(new java.awt.Color(255, 255, 255));
        JSONButton1.setText("  Mostrar grafo  ");
        JSONButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        JSONButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JSONButton1ActionPerformed(evt);
            }
        });

        agregarLineaParadas.setBackground(new java.awt.Color(255, 204, 204));
        agregarLineaParadas.setFont(new java.awt.Font("Swis721 Blk BT", 0, 14)); // NOI18N
        agregarLineaParadas.setForeground(new java.awt.Color(255, 255, 255));
        agregarLineaParadas.setText("  Agregar línea de paradas  ");
        agregarLineaParadas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agregarLineaParadas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarLineaParadasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JSONButton1)
                            .addComponent(agregarLineaParadas)
                            .addComponent(JSONButton))
                        .addGap(223, 223, 223)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(CoberturaField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(DFSButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(BFSButton))
                                .addComponent(CoberturaLabel, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tButton))
                                    .addComponent(tLabel))
                                .addGap(286, 286, 286)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(SucursalLabel)
                                        .addGap(30, 30, 30))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(SucursalField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(SucursalButton))))
                            .addComponent(CoverturaLabel))
                        .addGap(64, 64, 64))))
            .addGroup(layout.createSequentialGroup()
                .addGap(274, 274, 274)
                .addComponent(MenuLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(ResultadosBusquedaLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(MenuLabel)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(JSONButton)
                                .addGap(18, 18, 18)
                                .addComponent(JSONButton1)
                                .addGap(18, 18, 18)
                                .addComponent(agregarLineaParadas))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CoberturaLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CoberturaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DFSButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(BFSButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(49, 49, 49)
                        .addComponent(SucursalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(SucursalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SucursalButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(tLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tButton))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ResultadosBusquedaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CoverturaLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2)))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tFieldActionPerformed

    }//GEN-LAST:event_tFieldActionPerformed

    private void SucursalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SucursalButtonActionPerformed
        CoberturaArea.setText("");
        if (grafo != null) {
            var red = graphstream.getGraphstream();
            String SucursalNombre = SucursalField.getText();
            Nodo NodoSeleccionado = grafo.SelecionarParada(SucursalNombre);
            if (NodoSeleccionado != null) {
                for (Node node : red) {
                    if (node.getId().equalsIgnoreCase(SucursalNombre)) {
                        if (grafo.SelecionarParada(SucursalNombre).getInfo().isSucursal() == false) {
                            node.setAttribute("ui.style", "fill-color: red;");
                            grafo.SelecionarParada(SucursalNombre).getInfo().setSucursal(true);
                            JOptionPane.showMessageDialog(null, "La sucursal ha sido colocada exitosamente!", "Información", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            node.setAttribute("ui.style", "fill-color: grey;");
                            grafo.SelecionarParada(SucursalNombre).getInfo().setSucursal(false);
                            JOptionPane.showMessageDialog(null, "La sucursal ha sido eliminada exitosamente!", "Información", JOptionPane.INFORMATION_MESSAGE);
                        }
                    }
                }
                Lista resultadosBFS = Busquedas.BFSSucursal(NodoSeleccionado, grafo.getT());
                for (int i = 0; i < resultadosBFS.count(); i++) {
                    Nodo aux = (Nodo) resultadosBFS.get(i);
                    CoberturaArea.append(aux.getInfo().getName() + "/n");
                }
            } else {
                JOptionPane.showMessageDialog(null, "ERROR, la parada seleccionada es invalida.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "ERROR, no cargaste un JSON antes.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        SucursalField.setText("");
    }//GEN-LAST:event_SucursalButtonActionPerformed

    private void JSONButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JSONButtonActionPerformed
        try {
            grafo = new LecturaJson().LecturaJson();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "ERROR, tipo de dato invalido.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_JSONButtonActionPerformed

    private void tButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tButtonActionPerformed
        if (grafo != null) {
            try {
                int new_t = Integer.parseInt(tField.getText());
                grafo.setT(new_t);
                JOptionPane.showMessageDialog(null, "T ha sido cambiado a " + new_t + " exitosamente!", "Información", JOptionPane.INFORMATION_MESSAGE);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "ERROR, coloca un número entero.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "ERROR, no cargaste un JSON antes.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        tField.setText("");
    }//GEN-LAST:event_tButtonActionPerformed

    private void DFSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DFSButtonActionPerformed
        ResultadosBusquedaArea.setText("");
        if (grafo != null) {
            if (graphstream != null) {
                var red = graphstream.getGraphstream();
                String SucursalNombre = CoberturaField.getText();
                var NodoSeleccionado = grafo.SelecionarParada(SucursalNombre);
                if (NodoSeleccionado != null) {
                    Lista resultados = Busquedas.DFS(NodoSeleccionado, grafo.getT());
                    for (Node node : red) {
                        for (int i = 0; i < resultados.count(); i++) {
                            Nodo aux = (Nodo) resultados.get(i);
                            if (node.getId().equalsIgnoreCase(aux.getInfo().getName())) {
                                System.out.println(node.getAttribute("ui.style").toString().contains("fill-color: red"));
                                if (node.getAttribute("ui.style").toString().contains("fill-color: red")) {
                                    node.setAttribute("ui.style", "fill-color: purple;");
                                } else {
                                    node.setAttribute("ui.style", "fill-color: blue;");
                                }
                            }
                        }
                    }
                    CoberturaField.setText("");
                    ResultadosBusquedaArea.setText(resultados.printList());
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR, la parada seleccionada es invalida.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "ERROR, muestra el grafo para observar los resultados.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "ERROR, no cargaste un JSON antes.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DFSButtonActionPerformed

    private void BFSButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BFSButtonActionPerformed
        ResultadosBusquedaArea.setText("");
        if (grafo != null) {
            if (graphstream != null) {
                var red = graphstream.getGraphstream();
                String SucursalNombre = CoberturaField.getText();
                var NodoSeleccionado = grafo.SelecionarParada(SucursalNombre);
                if (NodoSeleccionado != null) {
                    Lista resultados = Busquedas.BFS(NodoSeleccionado, grafo.getT());
                    for (Node node : red) {
                        for (int i = 0; i < resultados.count(); i++) {
                            Nodo aux = (Nodo) resultados.get(i);
                            if (node.getId().equalsIgnoreCase(aux.getInfo().getName())) {
                                if ("red".equals(node.getAttribute("ui.style"))) {
                                    node.setAttribute("ui.style", "fill-color: yellow;");
                                } else {
                                    node.setAttribute("ui.style", "fill-color: blue;");
                                }
                            }
                        }
                    }
                    CoberturaField.setText("");
                    ResultadosBusquedaArea.setText(resultados.printList());
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR, la parada seleccionada es invalida.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "ERROR, muestra el grafo para observar los resultados.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "ERROR, no cargaste un JSON antes.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_BFSButtonActionPerformed

    private void SucursalFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SucursalFieldActionPerformed

    }//GEN-LAST:event_SucursalFieldActionPerformed

    private void JSONButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JSONButton1ActionPerformed
        if (grafo != null) {
            GraphStream grafo1 = new GraphStream(grafo);
            graphstream = grafo1;
            grafo1.show();
        } else {
            JOptionPane.showMessageDialog(null, "ERROR, no cargaste un JSON antes.", "Error", JOptionPane.ERROR_MESSAGE);
        }         // TODO add your handling code here:
    }//GEN-LAST:event_JSONButton1ActionPerformed

    private void agregarLineaParadasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarLineaParadasActionPerformed

        int cant = JOptionPane.showInputDialog("");

    }

    /**
     * Procedimiento encargado de enlazar una secuencia de paradas
     *
     * @param nuevaLinea es una secuencia de paradas introducida por el usuario
     */
    public void agregarLinea(Lista nuevaLinea) {
        for (int i = 1; i <= nuevaLinea.count(); i++) {
            Parada x = (Parada) nuevaLinea.get(i - 1);
            Parada y = (Parada) nuevaLinea.get(i);
            grafo.addEdge(x, y);
            graphstream.addEdge(x.getName(), y.getName());
        }
    }//GEN-LAST:event_agregarLineaParadasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(MenuControles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(MenuControles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(MenuControles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(MenuControles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new MenuControles().setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BFSButton;
    private javax.swing.JTextArea CoberturaArea;
    private javax.swing.JTextField CoberturaField;
    private javax.swing.JLabel CoberturaLabel;
    private javax.swing.JLabel CoverturaLabel;
    private javax.swing.JButton DFSButton;
    private javax.swing.JButton JSONButton;
    private javax.swing.JButton JSONButton1;
    private javax.swing.JLabel MenuLabel;
    private javax.swing.JTextArea ResultadosBusquedaArea;
    private javax.swing.JLabel ResultadosBusquedaLabel;
    private javax.swing.JButton SucursalButton;
    private javax.swing.JTextField SucursalField;
    private javax.swing.JLabel SucursalLabel;
    private javax.swing.JButton agregarLineaParadas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton tButton;
    private javax.swing.JTextField tField;
    private javax.swing.JLabel tLabel;
    // End of variables declaration//GEN-END:variables
}
